Adding a Link to Member Details in Django:

Create the Details Template:

Create a new HTML file named details.html and place it in the /templates/ folder of your members app:

html
Copy code
my_tennis_club/members/templates/details.html
Add the following content to details.html:

html
Copy code
<!DOCTYPE html>
<html>
<body>

<h1>{{ mymember.firstname }} {{ mymember.lastname }}</h1>
  
<p>Phone: {{ mymember.phone }}</p>
<p>Member since: {{ mymember.joined_date }}</p>

<p>Back to <a href="/members">Members</a></p>

</body>
</html>
Note: The {{ }} brackets are used to display dynamic content from the Django context.

Add Link in the all-members Template:

Modify the all_members.html template to include links to member details pages:

html
Copy code
<!DOCTYPE html>
<html>
<body>

<h1>Members</h1>
  
<ul>
  {% for x in mymembers %}
    <li><a href="details/{{ x.id }}">{{ x.firstname }} {{ x.lastname }}</a></li>
  {% endfor %}
</ul>

</body>
</html>
Create a New View:

In the views.py file of your members app, create a new view named details:

python
Copy code
def details(request, id):
    mymember = Member.objects.get(id=id)
    template = loader.get_template('details.html')
    context = {
        'mymember': mymember,
    }
    return HttpResponse(template.render(context, request))
This view fetches the member with the specified id and sends it to the details.html template.

Add the details view to your views.py:

python
Copy code
from django.http import HttpResponse
from django.template import loader
from .models import Member

def members(request):
    mymembers = Member.objects.all().values()
    template = loader.get_template('all_members.html')
    context = {
        'mymembers': mymembers,
    }
    return HttpResponse(template.render(context, request))

def details(request, id):
    mymember = Member.objects.get(id=id)
    template = loader.get_template('details.html')
    context = {
        'mymember': mymember,
    }
    return HttpResponse(template.render(context, request))
Update URLs:

In the urls.py file of your members app, add the URL pattern for the details view:

python
Copy code
urlpatterns = [
    path('members/', views.members, name='members'),
    path('members/details/<int:id>', views.details, name='details'),
]
View the Result:

Start the server by navigating to the /my_tennis_club/ folder and executing this command:

Copy code
py manage.py runserver
In your web browser, type 127.0.0.1:8000/members/ in the address bar.

You should see the list of members with clickable links to their details pages. Clicking on a link will take you to the details page displaying more information about the selected member.